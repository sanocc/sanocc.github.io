{"meta":{"title":"Sancx","subtitle":"","description":"","author":"cx","url":"https://note.sancx.com","root":"/"},"pages":[{"title":"关于","date":"2020-03-19T13:19:10.000Z","updated":"2020-03-19T16:59:34.593Z","comments":true,"path":"about/index.html","permalink":"https://note.sancx.com/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-03-19T14:14:55.000Z","updated":"2020-03-19T17:00:49.274Z","comments":true,"path":"categories/index.html","permalink":"https://note.sancx.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-03-19T14:15:09.000Z","updated":"2020-03-19T17:00:25.872Z","comments":true,"path":"tags/index.html","permalink":"https://note.sancx.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"快速安装Wget  -Win10","slug":"快速安装Wget  -Win10","date":"2020-03-19T13:29:49.000Z","updated":"2020-03-19T13:30:47.020Z","comments":true,"path":"posts/50e41b64.html","link":"","permalink":"https://note.sancx.com/posts/50e41b64.html","excerpt":"","text":"快速安装Wget -Win10使用管理员权限进入CMD 安装choco1@&quot;%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString(&#39;https:&#x2F;&#x2F;chocolatey.org&#x2F;install.ps1&#39;))&quot; &amp;&amp; SET &quot;PATH&#x3D;%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin&quot; 检查Choco安装版本1choco 开始装wget输入以下代码，等待途中输入Y确认 1choco install wget 验证是否装好wget输入 wget -V 。记得V 是大写字母哈。 1wget -V 安装结束，下面开始你的表演吧~ 使用方法wget -P 目录 网址举例来说，如果你要放到/root底下，你可以打下列的指令： 123wget -P &#x2F;root 网址wget -P D:\\data http:&#x2F;&#x2F;www.xdown.com&#x2F;xxx.zipwget -O &quot;D:\\xxx.zip&quot; http:&#x2F;&#x2F;www.xdown.com&#x2F;xxx.zip 用wget下载东西，它会自动重连并断点续传。让人很放心。经常要下载一个网站或网站的某个目录。下载一个目录，例如下载网站www.example.com/目录mydir下的所有内容 123456789101112131415命令如下：wget -r -p -k -np -nc -e robots&#x3D;off http:&#x2F;&#x2F;www.example.com&#x2F;mydir&#x2F;如果要想下载整个网站，最好去除-np参数。 wget -r -p -k -nc -e robots&#x3D;off http:&#x2F;&#x2F;www.example.com&#x2F;mydir&#x2F; -r 递归；对于HTTP主机，wget首先下载URL指定的文件，然后（如果该文件是一个HTML文档的话）递归下载该文件所引用（超级连接）的所有文件（递 归深度由参数-l指定）。对FTP主机，该参数意味着要下载URL指定的目录中的所有文件，递归方法与HTTP主机类似。 -c 指定断点续传功能。实际上，wget默认具有断点续传功能，只有当你使用别的ftp工具下载了某一文件的一部分，并希望wget接着完成此工作的时候，才 需要指定此参数。 -nc 不下载已经存在的文件-np 表示不追溯至父目录，不跟随链接，只下载指定目录及子目录里的东西；-p 下载页面显示所需的所有文件。比如页面中包含了图片，但是图片并不在&#x2F;yourdir目录中，而在&#x2F;images目录下，有此参数，图片依然会被正常下 载。 -k 修复下载文件中的绝对连接为相对连接，这样方便本地阅读。-o down.log 记录日记到down.log-e robots&#x3D;off 忽略robots.txt 详情参数Wget 的使用1）支持断点下传功能2）同时支持FTP和HTTP下载方式3）支持代理服务器4）设置方便简单5）程序小，完全免费；命令格式： wget [参数列表] [目标软件、网页的网址] 1、启动类参数这一类参数主要提供软件的一些基本信息； 123-V,–version 显示软件版本号然后退出；-h,–help显示软件帮助信息；-e,–execute&#x3D;COMMAND 执行一个 “.wgetrc”命令 以上每一个功能有长短两个参数，长短功能一样，都可以使用。需要注意的是，这里的-e参数是执行一个.wgettrc的命令，.wgettrc命令其实是一个参数列表，直接将软件需要的参数写在一起就可以了。 2、文件处理参数这类参数定义软件log文件的输出方式等； 12345-o,–output-file&#x3D;FILE 将软件输出信息保存到文件；-a,–append-output&#x3D;FILE将软件输出信息追加到文件；-d,–debug显示输出信息；-q,–quiet 不显示输出信息；-i,–input-file&#x3D;FILE 从文件中取得URL； 以上参数对于攻击者比较有用，我们来看看具体使用；例1：下载192.168.1.168首页并且显示下载信息wget -dhttp://192.168.1.168 例2：下载192.168.1.168首页并且不显示任何信息wget -qhttp://192.168.1.168 例3：下载filelist.txt中所包含的链接的所有文件wget -i filelist.txt wget -np -m -l5 http://note.sancx.com //不下载本站所链接的其它站点内容，5级目录结构 3、下载参数下载参数定义下载重复次数、保存文件名等；-t,–tries=NUMBER 是否下载次数（0表示无穷次）-O –output-document=FILE下载文件保存为别的文件名-nc, –no-clobber 不要覆盖已经存在的文件-N,–timestamping只下载比本地新的文件-T,–timeout=SECONDS 设置超时时间-Y,–proxy=on/off 关闭代理 例：下载192.168.1.168的首页并将下载过程中的的输入信息保存到test.htm文件中wget -o test.htm http://192.168.1.168 4、目录参数目录参数主要设置下载文件保存目录与原来文件（服务器文件）的目录对应关系；-nd –no-directories 不建立目录-x,–force-directories 强制建立目录可能现在我们对这里的目录还不是很了解，我们来看一个举例 例：下载192.168.1.168的首页，并且保持网站结构wget -x http://192.168.1.168 5、HTTP参数HTTP参数设置一些与HTTP下载有关的属性；–http-user=USER设置HTTP用户–http-passwd=PASS设置HTTP密码–proxy-user=USER设置代理用户–proxy-passwd=PASS设置代理密码 以上参数主要设置HTTP和代理的用户、密码； 6、递归参数设置在下载一个网站或者网站的一个目录的时候，我们需要知道的下载的层次，这些参数就可以设置；-r,–recursive 下载整个网站、目录（小心使用）-l,–level=NUMBER 下载层次 例：下载整个网站wget -r http://192.168.1.168 7、递归允许与拒绝选项参数下载一个网站的时候，为了尽量快，有些文件可以选择下载，比如图片和声音，在这里可以设置； -A,–accept=LIST 可以接受的文件类型-R,–reject=LIST拒绝接受的文件类型-D,–domains=LIST可以接受的域名–exclude-domains=LIST拒绝的域名-L,–relative 下载关联链接–follow-ftp 只下载FTP链接-H,–span-hosts 可以下载外面的主机-I,–include-directories=LIST允许的目录-X,–exclude-directories=LIST 拒绝的目录 如何设定wget所使用的代理服务器wget可以使用用户设置文件”.wgetrc”来读取很多设置，我们这里主要利用这个文件来是设置代理服务器。使用者用什么用户登录，那么什么用户主目录下的”.wgetrc”文件就起作用。例如，“root”用户如果想使用”.wgetrc”来设置代理服务器，”/root/.wgetrc”就起作用，下面给出一个”.wgetrc”文件的内容，读者可以参照这个例子来编写自己的”wgetrc”文件：http-proxy = 111.111.111.111:8080ftp-proxy = 111.111.111.111:8080这两行的含义是，代理服务器IP地址为：111.111.111.111，端口号为：80。第一行指定HTTP协议所使用的代理服务器，第二行指定FTP协议所使用的代理服务器。","categories":[],"tags":[]},{"title":"Nodejs安装及环境变量配置-Win10","slug":"Nodejs安装及环境变量配置-Win10","date":"2020-03-19T13:20:42.000Z","updated":"2020-03-19T13:27:13.007Z","comments":true,"path":"posts/1db87a14.html","link":"","permalink":"https://note.sancx.com/posts/1db87a14.html","excerpt":"","text":"Nodejs安装及环境变量配置-Win10现在的前端开发已经离不开nodejs，其中的npm（或yarn）包管理工具更是带来很好的开发体验是。本文将简单介绍nodejs的安装及环境变量的配置，方便在更换电脑后重新配置node的查阅。本文适用window 10_ _Nodejs下载及安装 官网下载对应系统安装包 Nodejs最新版下载； 安装时注意修改安装目录，建议放在非C盘目录下，最好不要带有中文的文件夹，一路默认安装即可； 安装后检查； 安装完成后启动命令行工具（CMD），输入 12node -vnpm -v 查看安装版本，出现提示版本信息即为安装成功 。 说明：这里的环境配置主要配置的是npm安装的全局模块所在的路径，以及缓存cache的路径，之所以要配置，是因为以后在执行类似：npm install 模块名 [-g] 的安装语句时，会将安装的模块安装到【C:\\Users\\用户名\\AppData\\Roaming\\npm】路径中，占C盘空间。本文是将 &gt; nodejs 安装在 &gt; D:\\RuanJian\\NodeJS 目录下,以下操作可根据实际安装目录情况进行对应调整。 在安装目录下，如 D:\\RuanJian\\NodeJS 新建两个文件夹 node_global(全局包存放目录) 和 node_cache(缓存目录)； 打开命令行工具，执行以下两句操作： 12npm config set prefix &quot;D:\\RuanJian\\NodeJS\\node_global&quot;npm config set cache &quot;D:\\RuanJian\\NodeJS\\node_cache&quot; 配置环境变量： 打开系统属性-高级-环境变量，在系统变量中新建 变量名：NODE_PATH,变量值：D:\\RuanJian\\NodeJS\\node_global\\node_modules; ![](https://cdn.jsdelivr.net/gh/sanocc/PicGoCDN/img/20200319173753.png) 编辑用户变量的 path，将默认的 C 盘下 APPData/Roaming\\npm 修改为 D:\\RuanJian\\NodeJS\\node_global； ![](https://cdn.jsdelivr.net/gh/sanocc/PicGoCDN/img/20200319173824.png) 保存即可。 国内备用源：淘宝NPM镜像由于国内网络环境限制问题，使用 &gt; npm 安装包时，会遇到时间长，甚至安装失败的问题，建议使用淘宝镜像，具体方法参见官网 &gt; 淘宝镜像官网可使用官方推荐的 cnpm 命令行工具代替默认的 npm: 1npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org&#96; 注意：有时使用 cnpm 安装的路径可能回存在问题，在使用react-native开发应用时会出现问题。此时可以使用nrm切换淘宝源： 123npx nrm use taobao&#x2F;&#x2F; 以下方式切换回官方源npx nrm use npm END","categories":[],"tags":[]},{"title":"Hexo修改永久链接的默认格式","slug":"Hexo修改永久链接的默认格式","date":"2020-03-19T13:20:37.000Z","updated":"2020-03-19T13:26:34.826Z","comments":true,"path":"posts/84b12bae.html","link":"","permalink":"https://note.sancx.com/posts/84b12bae.html","excerpt":"","text":"Hexo修改永久链接的默认格式修改永久链接的默认格式Hexo的永久链接的默认格式是 :year/:month/:day/:title/，比如访问站点下某一篇文章时，其路径是 2018/04/12/xxxx/，如果我们的文章标题是中文的，那么该路径就会出现中文字符。在路径中出现了中文字符很容易引发各种问题，而且也不利于seo，因为路径包含了年月日三个层级，层级太深不利于百度蜘蛛抓取。解决办法就是利用其它的插件来生成唯一的路径，这样就算我们的文件标题随意修改，而不会导致原本的链接失效而造成站点下存在大量的死链。 解决方案：安装插件在站点根目录使用 git bash 执行命令： 1npm install hexo-abbrlink --save 修改站点配置文件打开根目录下的 _config.yml 文件，修改如下配置： 123456# permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;# permalink_defaults:permalink: posts&#x2F;:abbrlink.htmlabbrlink: alg: crc32 # 算法：crc16(default) and crc32 rep: hex # 进制：dec(default) and hex 这里将页面都添加了 .html 的后缀，用来伪装成静态页面(虽说Hexo的页面本身就是静态页面)，这样可以直接从路径就知道这是个静态页面，方便seo。 接下来重新生成，部署，预览。可以看到我们的文章路径变成了 /posts/xxxxx.html，接下来就算我们将文字标题命名为中文也没问题了。 根目录下输入hexo clean**清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。**hexo g**生成静态网页，然后输入**hexo s**可以本地预览效果，最后输入**hexo d**上传到github上。**这时打开你的github.io主页就能看到发布的文章啦 写文章、发布文章首先在博客根目录下右键打开git bash，安装一个扩展npm i hexo-deployer-git。然后输入hexo new post &quot;article title&quot;，新建一篇文章。然后打开D:\\WEB\\BLOG\\source\\_posts的目录，可以发现下面多了一个文件夹和一个.md文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。编写完markdown文件后，生成，部署，预览。","categories":[],"tags":[]},{"title":"PicGo+jsDelivr+GitHub搭建免费cdn加速图床","slug":"PicGo+jsDelivr+GitHub搭建免费cdn加速图床","date":"2020-03-19T13:20:24.000Z","updated":"2020-03-19T13:28:05.812Z","comments":true,"path":"posts/c16832e9.html","link":"","permalink":"https://note.sancx.com/posts/c16832e9.html","excerpt":"","text":"PicGo+jsDelivr+GitHub搭建免费cdn加速图床下载PicGoPicGo下载地址: https://github.com/Molunerfinn/picgo/releases 创建Github仓库创建完成后点击右上方我的头像，进入Settings设置然后进行选择Developer settings再点Personal access tokens；点击Generate new tokens然后填写信息复制生成的token,（再关闭网页这个token就没法复制了） 配置PicGo设定自定义域名：它的的作用是，在图片上传后，PicGo会按照【自定义域名+上传的图片名】的方式生成访问链接，放到粘贴板上。因为我们要使用jsDelivr加速访问，所以可以设置为 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;github用户名&#x2F;图床仓库名","categories":[],"tags":[]},{"title":"Hexo搭建详细图文教程-Win10","slug":"Hexo搭建详细图文教程-Win10","date":"2020-03-19T13:20:08.000Z","updated":"2020-03-19T13:25:52.889Z","comments":true,"path":"posts/f3b61b38.html","link":"","permalink":"https://note.sancx.com/posts/f3b61b38.html","excerpt":"","text":"Hexo搭建详细图文教程-Win10 简介Hexo - 快速、简洁且高效的博客框架本搭建教程是不需要自有服务器的，只需要注册个Github账号就可以，完全免（Bai）费（Piao）主要是托管在Github上面。如果比较在意独立域名以及访问速度等等，可以花钱的哈~ 本地环境配置搭建1. 安装Node.js详细的安装教程前面已经写好了，这里就不在过多的叙述了，请移步~ 2.安装Git及连接到Github详细的安装教程前面已经写好了，这里就不在过多的叙述了，请移步~ 安装Hexo进入D盘创建一个文件夹，命名为BLOG（你随意）这个文件夹就是用来放博客所有文件的地方。进入文件夹后，按住Shift键同时右键鼠标。 1.首先来安装博客框架点在此处打开PowerShell窗口(S) ，使用npm命令来安装Hexo安装后会有几个WARN报错，直接无视它。 1npm install -g hexo-cli 2.然后验证安装成功的版本1hexo -v 3.然后进行初始化Hexo1hexo init 4.安装npm依赖插件1npm install 5.生成Hexo静态网页1hexo g 6.开启本地服务器进行预览1hexo s 7.浏览器进行浏览打开浏览器输入网址 http://localhost:4000如果想关闭本地预览，Ctrl+C 或者 关闭命令窗口 Hexo常用命令汇总12345678hexo new &quot;一个新的文章名字&quot; #这是创建新的文章的命令hexo g #生成静态网页hexo s #启动本地服务hexo d #部署到github或别地方npm install hexo -g #安装Hexonpm update hexo -g #升级hexo init #初始化博客 简写命令汇总12345678910hexo n “文章名” &#x3D;&#x3D; hexo new “文章名” #新建名为“文章名”的文章hexo g &#x3D;&#x3D; hexo generate #生成hexo s &#x3D;&#x3D; hexo server #启动服务预览hexo d &#x3D;&#x3D; hexo deploy #部署hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令 Hexo美化看到这个博客是不是瞬间无爱，简直是丑爆了。我们可以更换喜欢的主题哦，网上教程有很多，大神们也可以自己制作哦，下面转移到官方主题网站。 END","categories":[],"tags":[]},{"title":"Hexo搭建详细教程Windows10","slug":"Hexo搭建详细教程Windows10","date":"2020-03-19T13:20:01.000Z","updated":"2020-03-19T13:25:13.328Z","comments":true,"path":"posts/6dd28e9b.html","link":"","permalink":"https://note.sancx.com/posts/6dd28e9b.html","excerpt":"","text":"Hexo搭建及部署Github外网访问详细教程Win10 简介Hexo - 快速、简洁且高效的博客框架。 本搭建教程是不需要自有服务器的，只需要注册个Github账号就可以，完全免（Bai）费（Piao）主要是托管在Github上面。如果比较在意独立域名以及访问速度等等，可以花钱的哈~ Nodejs安装及环境变量配置_Nodejs下载及安装 官网下载对应系统安装包 Nodejs最新版下载； 安装时注意修改安装目录，建议放在非C盘目录下，最好不要带有中文的文件夹，一路默认安装即可； 安装后检查； 安装完成后启动命令行工具（CMD），输入以下检查代码 12node -vnpm -v 查看安装版本，出现提示版本信息即为安装成功 。 更换NPM全局模块路径这里的环境配置主要配置的是npm安装的全局模块所在的路径，以及缓存cache的路径，之所以要配置，是因为以后在执行类似：npm install 模块名 [-g] 的安装语句时，会将安装的模块安装到【C:\\Users\\用户名\\AppData\\Roaming\\npm】路径中，占C盘空间。本文是将 &gt; nodejs 安装在 &gt; D:\\RuanJian\\NodeJS 目录下,以下操作可根据实际安装目录情况进行对应调整。 在安装目录下，如 D:\\RuanJian\\NodeJS 新建两个文件夹 node_global(全局包存放目录) 和 node_cache(缓存目录)； 打开命令行工具，执行以下两句操作： 12npm config set prefix &quot;D:\\RuanJian\\NodeJS\\node_global&quot;npm config set cache &quot;D:\\RuanJian\\NodeJS\\node_cache&quot; 配置环境变量： 打开系统属性-高级-环境变量，在系统变量中新建 变量名：NODE_PATH,变量值：D:\\RuanJian\\NodeJS\\node_global\\node_modules; ![](https://cdn.jsdelivr.net/gh/sanocc/PicGoCDN/img/20200319173753.png) 编辑用户变量的 path，将默认的 C 盘下 APPData/Roaming\\npm 修改为 D:\\RuanJian\\NodeJS\\node_global； ![](https://cdn.jsdelivr.net/gh/sanocc/PicGoCDN/img/20200319173824.png) 保存即可。 国内备用源：淘宝NPM镜像由于国内网络环境限制问题，使用 &gt; npm 安装包时，会遇到时间长，甚至安装失败的问题，建议使用淘宝镜像，具体方法参见官网 &gt; 淘宝镜像官网可使用官方推荐的 cnpm 命令行工具代替默认的 npm: 1npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org&#96; 注意：有时使用 cnpm 安装的路径可能回存在问题，在使用react-native开发应用时会出现问题。此时可以使用nrm切换淘宝源： 123npx nrm use taobao&#x2F;&#x2F; 以下方式切换回官方源npx nrm use npm 安装Hexo 进入D盘创建一个文件夹，命名为BLOG（你随意）这个文件夹就是用来放博客所有文件的地方。进入文件夹后，按住Shift键同时右键鼠标。 1.首先来安装博客框架点在此处打开PowerShell窗口(S) ，使用npm命令来安装Hexo安装后会有几个WARN报错，直接无视它。 1npm install -g hexo-cli 然后验证安装成功的版本 1hexo -v 然后进行初始化Hexo 1hexo init 安装npm依赖插件 1npm install 生成Hexo静态网页 1hexo g 开启本地服务器进行预览 1hexo s 浏览器进行浏览 打开浏览器输入网址 http://localhost:4000如果想关闭本地预览，Ctrl+C 或者 关闭命令窗口 Hexo常用命令汇总123456789hexo new &quot;一个新的文章名字&quot; #这是创建新的文章的命令hexo new page &quot;名字&quot; #新建一个页面如about等hexo g #生成静态网页hexo s #启动本地服务hexo d #部署到github或别地方npm install hexo -g #安装Hexonpm update hexo -g #升级hexo init #初始化博客 简写命令汇总1234567891011hexo n “文章名” &#x3D;&#x3D; hexo new “文章名” #新建名为“文章名”的文章hexo n page &quot;名字&quot; &#x3D;&#x3D; hexo new page &quot;名字&quot; #新建一个页面如about等hexo g &#x3D;&#x3D; hexo generate #生成hexo s &#x3D;&#x3D; hexo server #启动服务预览hexo d &#x3D;&#x3D; hexo deploy #部署hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令 Hexo美化看到这个博客是不是瞬间无爱，简直是丑爆了。我们可以更换喜欢的主题哦，网上教程有很多，大神们也可以自己制作哦，下面转移到官方主题网站。 Hexo修改永久链接的默认格式Hexo的永久链接的默认格式是 :year/:month/:day/:title/，比如访问站点下某一篇文章时，其路径是 2018/04/12/xxxx/，如果我们的文章标题是中文的，那么该路径就会出现中文字符。 在路径中出现了中文字符很容易引发各种问题，而且也不利于seo，因为路径包含了年月日三个层级，层级太深不利于百度蜘蛛抓取。 解决办法就是利用其它的插件来生成唯一的路径，这样就算我们的文件标题随意修改，而不会导致原本的链接失效而造成站点下存在大量的死链。 安装插件在站点根目录使用 git bash 执行命令： 1npm install hexo-abbrlink --save 修改站点配置文件打开根目录下的 _config.yml 文件，修改如下配置： 123456# permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;# permalink_defaults:permalink: posts&#x2F;:abbrlink.htmlabbrlink: alg: crc32 # 算法：crc16(default) and crc32 rep: hex # 进制：dec(default) and hex 这里将页面都添加了 .html 的后缀，用来伪装成静态页面(虽说Hexo的页面本身就是静态页面)，这样可以直接从路径就知道这是个静态页面，方便seo。 接下来重新生成，部署，预览。 可以看到我们的文章路径变成了 /posts/xxxxx.html，接下来就算我们将文字标题命名为中文也没问题了。 根目录下输入hexo clean**清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。**hexo g**生成静态网页，然后输入**hexo s**可以本地预览效果，最后输入** 写文章、发布文章首先在博客根目录下右键打开git bash，安装一个扩展 1npm i hexo-deployer-git 然后输入 1hexo new post &quot;article title&quot; &#x3D;&#x3D;&#x3D;新建一篇文章 然后打开D:\\WEB\\BLOG\\source\\_posts的目录，可以发现下面多了一个文件夹和一个.md文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。编写完markdown文件后，生成，部署，预览。 Git安装教程及连接Github -Win10Git下载进入官网下载区域，找到与自己系统相适应的版本进行下载； 另一个简单的方法是安装 GitHub Desktop。 该安装程序包含图形化和命令行版本的 Git。 它也能支持 Powershell，提供了稳定的凭证缓存和健全的换行设置。 稍后我们会对这方面有更多了解，现在只要一句话就够了，这些都是你所需要的。 你可以在 GitHub for Windows 网站下载。 Git安装完全的自动安装，直接一路Next… 测试检查在cmd窗口中，输入git显示如下就是安装成功啦！ Git连接Github首先在Github上注册一个账号。在右键菜单里点Git Bash Here在打开的窗口输入，设置user.name和user.email配置信息 12git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot; 然后生成ssh秘钥文件 1ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot; 然后按回车键，进行下一步，继续回车（三次左右） 进入C:\\Users\\sance.ssh就可以看到2个文件 打开id_rsa.pub,将里面所有的内容全部复制出来。进入Github设置SSH key点New SSH key Title随便输入自己方便辨识就可以了，Key粘贴刚才从id_rsa.pub,将里面复制的所有内容，然后点击Add SSH key 测试Github连接在Git Bash中输入 123ssh git@github.com稍后输入yes 这么显示，就是连接成功啦~ Hexo部署到Github详细教程GitHub创建个人仓库登录到GitHub,点击GitHub中的New repository创建新仓库， 仓库名应该为：用户名.github.io 这个用户名使用你的GitHub帐号名称，这是固定写法！！如图所示，然后点击 Create repository 就完成了新仓库的创建。 进入新仓库，点击Settings， 向下拉到最后有个GitHub Pages，点击Choose a theme选择一个主题。进入主题模板选择，这里随便选一个都可以，我这里选的是默认的哈，然后点击Select theme 推送本地Hexo到Github上接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为站点配置文件，如下图 进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为主题配置文件，如下图 下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为： 1234deploy: type: git repo: https:&#x2F;&#x2F;github.com&#x2F;用户名&#x2F;用户名.github.io.git branch: master 保存站点配置文件。其实就是给hexo d 这个命令做相应的配置，让Hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令： 1npm install hexo-deployer-git --save 这时，我们分别输入三条命令： 123hexo clean hexo g hexo d 其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。 完成预览打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 用户名.github.io还可以绑定自有域名 END","categories":[],"tags":[]},{"title":"Hexo部署到Github详细教程-Win10","slug":"Hexo部署到Github详细教程-Win10","date":"2020-03-19T13:19:54.000Z","updated":"2020-03-19T13:24:28.720Z","comments":true,"path":"posts/1ad5be0d.html","link":"","permalink":"https://note.sancx.com/posts/1ad5be0d.html","excerpt":"","text":"Hexo部署到Github详细教程-Win10GitHub创建个人仓库登录到GitHub,点击GitHub中的New repository创建新仓库， 仓库名应该为：用户名.github.io 这个用户名使用你的GitHub帐号名称，这是固定写法！！如图所示，然后点击 Create repository 就完成了新仓库的创建。 进入新仓库，点击Settings， 向下拉到最后有个GitHub Pages，点击Choose a theme选择一个主题。进入主题模板选择，这里随便选一个都可以，我这里选的是默认的哈，然后点击Select theme 推送本地Hexo到Github上接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为站点配置文件，如下图 进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为主题配置文件，如下图 下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为： 1234deploy: type: git repo: https:&#x2F;&#x2F;github.com&#x2F;用户名&#x2F;用户名.github.io.git branch: master 保存站点配置文件。其实就是给hexo d 这个命令做相应的配置，让Hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令： 1npm install hexo-deployer-git --save 这时，我们分别输入三条命令： 123hexo clean hexo g hexo d 其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。 完成预览打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 用户名.github.io END","categories":[],"tags":[]},{"title":"Git安装教程及连接Github -Win10","slug":"Git安装教程及连接Github -Win10","date":"2020-03-19T13:19:46.000Z","updated":"2020-03-19T13:23:39.345Z","comments":true,"path":"posts/83dcefb7.html","link":"","permalink":"https://note.sancx.com/posts/83dcefb7.html","excerpt":"","text":"Git安装教程及连接Github -Win10Git下载进入官网下载区域，找到与自己系统相适应的版本进行下载； 另一个简单的方法是安装 GitHub Desktop。 该安装程序包含图形化和命令行版本的 Git。 它也能支持 Powershell，提供了稳定的凭证缓存和健全的换行设置。 稍后我们会对这方面有更多了解，现在只要一句话就够了，这些都是你所需要的。 你可以在 GitHub for Windows 网站下载。 Git安装完全的自动安装，直接一路Next… 测试检查在cmd窗口中，输入git显示如下就是安装成功啦！ Git连接Github首先在Github上注册一个账号。在右键菜单里点Git Bash Here在打开的窗口输入，设置user.name和user.email配置信息 12git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot; 然后生成ssh秘钥文件 1ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot; 然后按回车键，进行下一步，继续回车（三次左右） 进入C:\\Users\\sance.ssh就可以看到2个文件 打开id_rsa.pub,将里面所有的内容全部复制出来。进入Github设置SSH key点New SSH key Title随便输入自己方便辨识就可以了，Key粘贴刚才从id_rsa.pub,将里面复制的所有内容，然后点击Add SSH key 测试Github连接在Git Bash中输入 123ssh git@github.com稍后输入yes 这么显示，就是连接成功啦~ END","categories":[],"tags":[]},{"title":"SQL学习","slug":"SQL学习","date":"2020-03-19T13:18:08.000Z","updated":"2020-03-19T13:29:34.180Z","comments":true,"path":"posts/4a17b156.html","link":"","permalink":"https://note.sancx.com/posts/4a17b156.html","excerpt":"","text":"SQL学习常用的语法SQL (结构化查询语言)是用于执行查询的语法。但是 SQL 语言也包含用于更新、插入和删除记录的语法。查询和更新指令构成了 SQL 的 DML 部分： 1234SELECT - 从数据库表中获取数据UPDATE - 更新数据库表中的数据DELETE - 从数据库表中删除数据INSERT INTO - 向数据库表中插入数据 SQL 的数据定义语言 (DDL) 部分使我们有能力创建或删除表格。我们也可以定义索引（键），规定表之间的链接，以及施加表间的约束。SQL 中最重要的 DDL 语句: 1234567CREATE DATABASE - 创建新数据库ALTER DATABASE - 修改数据库CREATE TABLE - 创建新表ALTER TABLE - 变更（改变）数据库表DROP TABLE - 删除表CREATE INDEX - 创建索引（搜索键）DROP INDEX - 删除索引 SQL SELECT 语句SELECT 语句用于从表中选取数据。结果被存储在一个结果表中（称为结果集）。 SQL SELECT 语法1SELECT 列名称 FROM 表名称 以及： 1SELECT * FROM 表名称 注释：* 指的是所有；SQL 语句对大小写不敏感。SELECT 等效于 select。","categories":[],"tags":[]}]}